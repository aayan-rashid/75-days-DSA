import java.util.Arrays;

//import org.graalvm.compiler.asm.sparc.SPARCAssembler.Br;

public class Solution {
    public static int[] findMissingRepeatingNumbers(int []a) {
        // Write your code here

        int n = a.length;

        int[] hash = new int[n+1];

        for (int i=0; i<n; i++)
        {
            hash[a[i]]++;
        }

        //System.out.println(Arrays.toString(hash));


        int[] res = new int[2];
        for (int i=1; i<n+1; i++)
        {
            if (hash[i] == 2)
            {
                res[0] = i;
            }

            if (hash[i] == 0)
            {
                res[1] = i;
            }
        }

        return res;
    }
}    

        //Arrays.sort(a);
        //System.out.println(Arrays.toString(a));

//         int[] res = new int[2];

//         int n = a.length;

//         if (n == 2)
//         {
//             res[0] = a[0];
//             res[1] = a[1];
//             return res;
//         }


//         for (int i=1; i<=n; i++)
//         {
//             int count = 0;
//             for (int j=0; j<n; j++)
//             {
//                 if (a[j] == i)
//                 {
//                     count++;
//                 }
//             }
            
//             if (count == 2)
//             {
//                 res[0] = i;
//             }

//             if (count == 0)
//             {
//                 res[1] = i;
//             }
//         }

//         return res;

//     }
// }








        // int count = 0;
        // boolean flag = true;

        // for (int i=0; i<n && !flag; i++)
        // {
        //     for (int j=0; j<n; j++)
        //     {
        //         if (a[i] == a[j])
        //         {
        //             count++;
        //         }
        //         if (count == 2)
        //         {
        //             res[0] = a[i];
        //             flag = false;
        //             //break;
        //         }
        //     }
        // }



        // boolean ismissing = false;
        // int i = 0;
        // if (a[i] != i+1)
        // {
        //     res[1] = i+1;
        //     ismissing = true; 

        //     if (ismissing)
        //     {
        //         break;
        //     }
        //     else
        //     {
        //         i++;
        //     }
        // }
            
            // if (a[i] == a[i+1])
            // {
            //     res[0] = a[i];
            // }
            // if (a[i] != i+1)
            // {
            //     res[1] = i+1;
            // }
        

        //System.out.println(Arrays.toString(res));

//         return res;
//     }
// }