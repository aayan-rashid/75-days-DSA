import java.util.ArrayList;


public class Solution {
    public static int[] alternateNumbers(int []a) {
        // Write your code here.

        int n =a.length;
        int even_count = 0;
        int odd_count = 0;


        int[] even = new int[n/2];
        int[] odd = new int[n/2];
        int[] res = new int[n];

        for (int i=0; i<n; i++)
        {
            if (a[i] > 0)
            {
                even[even_count] = a[i];
                even_count++;
            }
            else
            {
                odd[odd_count] = a[i];
                odd_count++;
            }
        }
        int res_even =0;
        int res_odd =0;
        for (int i=0; i<n; i++)
        {
            if (i % 2 == 0)
            {
                res[i] = even[res_even];
                res_even++;
            }
            else
            {
                res[i] = odd[res_odd];
                res_odd++;
            }
        }

        return res;

        // int n = a.length;

        // ArrayList<Integer> even = new ArrayList<>(n/2);
        // ArrayList<Integer> odd = new ArrayList<>(n/2);

        // for (int i=0; i<n; i++)
        // {
        //     if (a[i] > 0)
        //     {
        //         even.add(a[i]);
        //     }
        //     else
        //     {
        //         odd.add(a[i]);
        //     }
        // }

        // int[] evenfinal = (int)even.toArray();
        // odd.toArray();

        // return evenfinal;
        

        // int n = a.length;

        // for (int i=0; i<n; i++ )
        // {
        //     if (a[i] > 0)
        //     {
        //         int m;
        //         for (m=0; m<n; )
        //         {
        //             a[m] = a[i];
                    
        //         }
        //         m +=2;
                
        //     }
        //     else
        //     {
        //         for (int k=1; k<n; )
        //         {
        //             a[k] = a[i];
        //             k +=2;
        //         }
        //     }
        // }
        // return a;
    }
}