import java.util.ArrayList;
import java.util.Collection;
import java.util.Collections;

/****************************************************************

 Following is the class structure of the Node class:

 class Node {
     public int data;
     public Node next;
     public Node prev;

     Node()
     {
         this.data = 0;
         this.next = null;
         this.prev = null;
     }

     Node(int data)
     {
         this.data = data;
         this.next = null;
         this.prev = null;
     }

     Node(int data, Node next)
     {
         this.data = data;
         this.next = next;
         this.prev = next;
     }
 };

 *****************************************************************/

public class Solution
{
    public static Node reverseDLL(Node head)
    {
        // Write your code here.


        // Using Arrays

        Node temp = head;
        
        int cnt = 0;
        while (temp != null)
        {
            cnt++;
            temp = temp.next;
        }

        temp = head;
        int pos = 0;
        int[] arr = new int[cnt];

        for (int i = 0; i < cnt; i++ )
        {
            arr[i] = temp.data;
            temp = temp.next;
        }

        temp = head;

        for (int i = cnt - 1; i >= 0; i--)
        {
            temp.data = arr[i];
            temp = temp.next;
        }





        // USING ARRAYLIST
        // ArrayList<Integer> list = new ArrayList<>();

        // Node temp = head;

        // while (temp != null)
        // {
        //     list.add(temp.data);
        //     temp = temp.next;
        // }

        // temp = head;

        // Collections.reverse(list);

        // for (int x : list)
        // {
        //     temp.data = x;
        //     temp = temp.next;
        // }

        return head;
    }
}