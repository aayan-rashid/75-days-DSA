/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode reverseList(ListNode head) 
    {
        
        // without using extra space
        ListNode temp = head;
        ListNode prev = null;

        while(temp != null)
        {
            ListNode front = temp.next;
            temp.next = prev;
            prev = temp;
            temp = front;
        }

        return prev;



        
        
        // USING ARRAY SPACE O(n)
        
        // ListNode temp = head;

        // int cnt = 0;
        // while (temp != null)
        // {
        //     cnt++;
        //     temp = temp.next;
        // }

        // temp = head;

        // int[] data = new int[cnt];

        // int i = 0;
        // while (temp != null)
        // {
        //     data[i++] = temp.val;
        //     temp = temp.next;
        // }
        
        // temp = head;

        // i = cnt - 1;
        // while (temp != null)
        // {
        //     temp.val = data[i--];
        //     temp = temp.next;
            
        // }
        // return head;
    }
}