/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public boolean isPalindrome(ListNode head) {

        //using arrays to store values
        
        ListNode temp = head;
        int cnt = 0;

        while (temp != null)
        {
            cnt++;
            temp = temp.next;
        }
        int[] arr = new int[cnt];

        temp = head;

        int val = 0;
        while (temp != null)
        {
            arr[val++] = temp.val;
            temp = temp.next;
        }

        temp = head;

        int p = cnt-1;
        while (temp != null)
        {
            if (temp.val != arr[p])
            {
                return false;
            }
            else
            {
                temp = temp.next;
                p--;
            }
        }
        
        return true;






        // using reverse method

        // ListNode temp = head;
        // ListNode prev = null;

        // while(temp != null)
        // {
        //     ListNode front = temp.next;
        //     temp.next = prev;
        //     prev = temp;
        //     temp = front;
        // }

        // if (prev == head)
        // {
        //     return true;
        // }
        // else
        // {
        //     return false;
        // }
        
    }   
}