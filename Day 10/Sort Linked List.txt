/****************************************************************

 Following is the class structure of the Node class:

 class Node {
     public int data;
     public Node next;

     Node()
     {
         this.data = 0;
         this.next = null;
     }
     Node(int data)
     {
         this.data = data;
         this.next = null;
     }
     Node(int data, Node next)
     {
         this.data = data;
         this.next = next;
     }
 }

 *****************************************************************/
import java.util.*;
public class Solution {
    public static Node sortList(Node head) 
    {
        //Write your code here

        //USING ARRAY O(n)

        if (head == null || head.next == null)
        {
            return head;
        }

        Node temp = head;   

        int cnt = 0;
        while (temp != null)
        {
            cnt++;
            temp = temp.next;
        }

        temp = head;

        int[] arr = new int[cnt];
        int pos = 0;
        while (temp != null)
        {
            arr[pos] = temp.data;
            pos++;
            temp = temp.next;
        }
        
        Arrays.sort(arr);

        temp = head;
        pos = 0;
        while (temp != null)
        {
            temp.data = arr[pos];
            pos++;
            temp = temp.next;
        }

        return head;





        // USING LIST
        
        // if (head == null || head.next == null)
        // {
        //     return head;
        // }

        // Node temp = head;

        // List<Integer> list = new ArrayList<>();

        // while (temp != null)
        // {
        //     list.add(temp.data);
        //     temp = temp.next;
        // }

        // Collections.sort(list);
        // temp = head;

        // for (int i : list)
        // {
        //     temp.data = i;
        //     temp = temp.next;
        // }

        // return head;
    }
}