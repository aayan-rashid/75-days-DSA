class Solution {
    public int reversePairs(int[] arr) {

        return mergeSort(arr, 0, arr.length - 1);
    }


    public static int mergeSort(int[] arr, int low, int high)
    {
        // Write your code here
        int count = 0;
        if (low >= high)
        {
            return count;
        }

        int mid = (low + high)/2;

        count += mergeSort(arr, low, mid);
        count += mergeSort(arr, mid+1, high);
        count += merge(arr, low, mid, high);
        return count;

    }


    public static int merge(int[] arr,int low, int mid, int high)    
    {
        ArrayList<Integer> temp = new ArrayList<>();
        int left = low;
        int right = mid+1;
        int cnt = 0;

        while (left <= mid && right <= high)
        {
            if (arr[left] <= 2 * arr[right])
            {
                temp.add(arr[left]);
                left++;
            }
            else
            {
                temp.add(arr[right]);
                cnt += (mid - left + 1);
                right++;
            }

        }

        while (left <= mid)
        {
            temp.add(arr[left]);
            left++;
        }

        while (right <= high)
        {
            temp.add(arr[right]);
            right++;
        }

        int[] newarr = new int[temp.size()];
        for (int i=0; i<temp.size(); i++)
        {
            newarr[i] = temp.get(i);
        }

        for (int i=0; i<newarr.length; i++)
        {
            arr[low + i] = newarr[i];
        }

        return cnt;
    }
        
        
        
        
        
        
        
        // BRUTE - FORCE APPROACH O(n^2)

        // int count = 0;

        // for (int i=0; i < nums.length; i++)
        // {
        //     for (int j= i+1; j< nums.length; j++)
        //     {
        //         if ((long)nums[i] > 2L * (long)(nums[j]))
        //         {
        //             count++;
        //         }
        //     }
        // }
        // return count;
        
    
}