import java.util.LinkedList;
import java.util.Queue;

public class Solution{
    static class Stack {
        // Define the data members.
        Queue<Integer> q;

        public Stack() {
            // Implement the Constructor.
            q = new LinkedList<>();
        }

        /*----------------- Public Functions of Stack -----------------*/

        public int getSize() {
            // Implement the getSize() function.
            return q.size();
        }

        public boolean isEmpty() {
            // Implement the isEmpty() function.
            return q.isEmpty();
        }

        public void push(int element) {
            // Implement the push(element) function.
            q.add(element);

            for (int i =0; i < q.size() - 1; i++)
            {
                q.add(q.remove());
            }
        }

        public int pop() {
            // Implement the pop() function.
            if (!q.isEmpty())
            {
                return q.remove();
            }
            return -1; 
        }

        public int top() {
            // Implement the top() function.
            if (!q.isEmpty())
            {
                return q.peek();
            }
            return -1;  
        }
    }
}