/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode addTwoNumbers(ListNode head1, ListNode head2) {
        ListNode temp1 = head1;
        ListNode temp2 = head2;
        ListNode res = new ListNode(-1);
        ListNode ans = res;

        int carry = 0;
        while (temp1 != null || temp2 != null)
        {
            int sum = carry;
            if (temp1 != null)
            {
                sum += temp1.val;
            }
            
            if (temp2 != null)
            {
                sum += temp2.val;
            }

            if (sum >= 10)
            {
                sum %= 10;
                carry = 1;
            }
            
            else
            {
                carry = 0;
            }

            ListNode test = new ListNode(sum);
            res.next = test;
            res = res.next;
            if (temp1 != null)
            {
                temp1 = temp1.next;
            }
            if (temp2 != null) 
            {
                temp2 = temp2.next;
            }  
        }

        if (carry == 1)
        {
            ListNode carryNode = new ListNode(1);
            res.next = carryNode;
        }

        return ans.next;
        
    }
}