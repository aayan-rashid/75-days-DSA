/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) {
 *         val = x;
 *         next = null;
 *     }
 * }
 */
public class Solution {
    
    public ListNode getIntersectionNode(ListNode headA, ListNode headB) 
    {
        ListNode t1 = headA;
        ListNode t2 = headB;

        int cnt1 = 0;
        while (t1 != null)
        {
            cnt1++;
            t1 = t1.next;
        }

        int cnt2 = 0;
        while (t2 != null)
        {
            cnt2++;
            t2 = t2.next;
        }


        t1 = headA;
        t2 = headB;
        if (cnt1 >= cnt2)
        {
            int diff = cnt1 - cnt2;
            while (diff !=0)
            {
                t1 = t1.next;
                diff--;
            }
        }
        else
        {
            int diff = cnt2 - cnt1;
            while (diff !=0)
            {
                t2 = t2.next;
                diff--;
            }
        }

        
        while (t1 != null || t2 != null)
        {
            if (t1 == t2)
            {
                return t1;
            }
            t1 = t1.next;
            t2 = t2.next;
        }
        return null;
    }
}